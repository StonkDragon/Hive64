_start:
    ldr r0 0x1
    ldr r1 syscall.branchtable
    irq

    bl main
    halt

syscall.branchtable:
    .offset syscall.exit
    .offset syscall.write
    .offset syscall.read
    .offset syscall.open
    .offset syscall.close
    .qword 0
    .qword 0
    .qword 0

syscall.exit:
    ldr r0 r1 ; exit code
    halt

syscall.write: ; r1 = fd, r2 = buf, r3 = len
    pshx
    pshy
    psh r15
    psh r16
    psh r17
    psh r3

    ldr r15 r2
    ldr r17 r1
    
    syscall.write_loop:
        cmpz r3
        bz syscall.write_end

        mov r16 byte [r15]
        cmpz r16
        bz syscall.write_end
            ldr r0 0x0e
            ldr r1 r16
            ldr r2 r17
            irq

            inc r15
            dec r3
        b syscall.write_loop

    syscall.write_end:
    pp r3
    pp r17
    pp r16
    pp r15
    ppy
    ppx
    ret

syscall.read:
    ret

syscall.open:
    ret

syscall.close:
    ret
