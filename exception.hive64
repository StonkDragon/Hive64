_start:
    movz r0, 0x1
    lea r1, Lsyscall$branchtable
    irq

    bl main
    ldr r1, r0
    movz r0, 0x2
    irq

Lsyscall$branchtable:
    .offset Lsyscall$exit
    .offset Lsyscall$write
    .offset Lsyscall$read
    .offset Lsyscall$open
    .offset Lsyscall$close
    .qword 0
    .qword 0
    .qword 0

Lsyscall$exit:
    movl r0, 0x2
    irq

Lsyscall$write: ; r1 = fd, r2 = buf
    psh x
    psh y
    psh r2
    psh r15
    psh r16
    psh r17

    ldr r15, r2
    ldr r17, r1
    
    Lsyscall$write_loop:
        ldr.byte r16, [r15]

        cmp r16, zero
        b.eq Lsyscall$write_end
            movz r0, 0x0e
            ldr r1, r16
            ldr r2, r17
            irq

            inc r15
        b Lsyscall$write_loop

    Lsyscall$write_end:
    pp r17
    pp r16
    pp r15
    pp r2
    pp y
    pp x
    ret

Lsyscall$read:
    ret

Lsyscall$open:
    ret

Lsyscall$close:
    ret
