.text

.global _start
_start:
    movz r0, 0
    cpuid
    b.nz other_core

    # create a stack
    movz r8, 5              # svc id for mmap
    movz r0, 0              # addr
    movz r1, 0x100, shl 16  # size
    movz r2, 0x3            # PROT_READ | PROT_WRITE
    movz r3, 0x1002         # MAP_ANON | MAP_PRIVATE
    movz r4, 0              # fd
    movz r5, 0              # off
    svc
    movz r1, 0x100, shl 16  # size
    add sp, r0, r1
    xor r0, r0
    xor r1, r1

    xor r11, r11
    xor r0, r0

    bl _main

    # destroy the stack
    movz r8, 6              # munmap
    mov r0, sp              # stack
    movz r1, 0x100, shl 16  # size
    svc

other_core:
    movz r0, 0
    movz r8, 0
    svc

.global _puts
_puts:
    psh lr
    psh r0
    psh r1
    psh r2
    psh r8

    mov r1, r0
    bl _strlen
    mov r2, r0
    movz r0, 1
    movz r8, 2
    svc

    movz r0, 1
    lea r1, _puts$newline_str
    movz r2, 1
    svc

    pp r8
    pp r2
    pp r1
    pp r0
    pp lr
    ret

.global _strlen
_strlen:
    psh lr
    psh r2
    psh r1

    movz r1, 0
    _strlen$loop:
        ldrb r2, [r0, r1]
        b.z _strlen$end

        add r1, r1, 1
        b _strlen$loop
    _strlen$end:

    mov r0, r1

    pp r1
    pp r2
    pp lr
    ret

.data
_puts$newline_str:
    .asciz "\n"
