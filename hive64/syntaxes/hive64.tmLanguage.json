{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Hive64 Assembly",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#generic_mnemonics"
		},
		{
			"include": "#float_mnemonics"
		},
		{
			"include": "#branch_mnemonics"
		},
		{
			"include": "#math_mnemonics"
		},
		{
			"include": "#vector_mnemonics"
		},
		{
			"include": "#conditions"
		},
		{
			"include": "#directives"
		},
		{
			"include": "#registers"
		},
		{
			"include": "#labels"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#characters"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.semicolon.hive64",
					"match": "(;|@|#).*$"
				}
			]
		},
		"conditions": {
			"patterns": [{
				"name": "keyword.control",
				"match": "(\\.(eq|ne|le|ge|lt|gt|z|nz|mi|pl))\\b"
			}]
		},
		"generic_mnemonics": {
			"patterns": [{
				"name": "keyword.control",
				"match": "\\b(nop|ret|ldr(q|d|w|b)?|str(q|d|w|b)?|mov(z|k)?|lea|svc|(s|u)b(xt|dp)|psh|pp)\\b"
			}]
		},
		"float_mnemonics": {
			"patterns": [{
				"name": "keyword.control",
				"match": "\\b((f|s)(add|sub|mul|div|mod|cmp)i?|i2(f|s)|(f|s)2i|f2s|s2f|(f|s)(sqrt|sin))\\b"
			}]
		},
		"branch_mnemonics": {
			"patterns": [{
				"name": "keyword.control",
				"match": "\\b(bl?r?)\\b"
			}]
		},
		"math_mnemonics": {
			"patterns": [{
				"name": "keyword.control",
				"match": "\\b(add|sub|mul|div|mod|and|or|xor|shl|shr|rol|ror|neg|not|asr|asl|swe|tst|cmp|inc|dec)\\b"
			}]
		},
		"vector_mnemonics": {
			"patterns": [{
				"name": "keyword.control",
				"match": "\\bv([a-zA-Z]*)\\b"
			}]
		},
		"registers": {
			"patterns": [{
				"name": "storage",
				"match": "\\b(r([1-2][0-9]|3[0-1]|[0-9])|sp|lr|pc)\\b"
			}]
		},
		"labels": {
			"patterns": [{
				"name": "variable.name",
				"match": "\\b([a-zA-Z_][a-zA-Z0-9_\\.\\$\\{\\}\\(\\)]*):?"
			}]
		},
		"directives": {
			"patterns": [{
				"name": "storage.register",
				"match": "(\\.(ascii|asciz|extern|byte|word|dword|qword|offset|globa?l))\\b"
			}]
		},
		"numbers": {
			"patterns": [{
				"name": "constant.numeric",
				"match": "\\b(0x[0-9a-fA-F]+|[0-9]+|0b[01]+|0o[0-7]+)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape",
				"match": "\\\\."
			}]
		},
		"characters": {
			"name": "string.quoted.single",
			"begin": "'",
			"end": "'",
			"patterns": [{
				"name": "constant.character.escape",
				"match": "\\\\."
			}]
		},
		"operators": {
			"name": "keyword.operator",
			"patterns": [{
				"name": "constant.character.escape",
				"match": "[\\+\\-,]"
			}]
		}
	},
	"scopeName": "source.hive64"
}